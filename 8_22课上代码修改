#include <iostream>
#include <fstream>
#include <vector>
#include <string>
#include <stdexcept> // 用于抛出异常

using namespace std;

class Calculator {
public:
    static double add(const vector<double>& numbers) {
        double result = 0.0;
        for (double num : numbers) {
            result += num;
        }
        return result;
    }

    static double subtract(const vector<double>& numbers) {
        if (numbers.empty()) throw runtime_error("No numbers provided for subtraction.");
        double result = numbers[0];
        for (size_t i = 1; i < numbers.size(); ++i) {
            result -= numbers[i];
        }
        return result;
    }

    // 类似地，可以为multiply和divide添加函数

    static double calculate(string fun, const vector<double>& numbers) {
        if (fun == "add") return add(numbers);
        if (fun == "minus") return subtract(numbers);
        // 添加对multiply和divide的调用
        throw runtime_error("Unknown operation");
    }
};

vector<double> readNumbersFromFile(const string& filename) {
    vector<double> numbers;
    ifstream infile(filename);
    if (!infile) throw runtime_error("Unable to open file");
    double number;
    while (infile >> number) {
        numbers.push_back(number);
    }
    infile.close();
    return numbers;
}

int main(int argc, char *argv[]) {
    if (argc != 3) {
        cerr << "Usage: " << argv[0] << " <operation> <filename>" << endl;
        return 1;
    }

    string operation = argv[1];
    string filename = argv[2];

    try {
        vector<double> numbers = readNumbersFromFile(filename);
        double result = Calculator::calculate(operation, numbers);
        cout << "Result of operation '" << operation << "' is: " << result << endl;
    } catch (const runtime_error& e) {
        cerr << "Error: " << e.what() << endl;
        return 1;
    }

    return 0;
}
